<?xml version="1.0" standalone="yes"?>

<project name="jbsdiff" basedir="." default="jar">
    <description>
        Ant buildfile for the ${ant.project.name} distribution
    </description>

    <!-- Build properties -->
    <property name="project.version" value="0.1" />
    <property name="project.url" value="http://matthew.malensek.net/projects/jbsdiff" />
    <tstamp>
        <format property="build.date" pattern="yyyy-MM-dd" />
    </tstamp>

    <!-- Directories -->
    <property name="src" value="src" />
    <property name="build" value="classes" />
    <property name="dist" value="lib" />
    <property name="docs" value="docs/javadoc" />

    <!-- javadoc properties -->
    <property name="header" value="${ant.project.name}" />
    <property name="Release" value="${project.version}" />
    <property name="windowtitle"
        value="${ant.project.name} Documentation ${Release}" />
    <property name="doctitle"
            value="${ant.project.name} ${Release} Package List" />

    <path id="classpath">
        <fileset dir="." includes="lib/*.jar" />
    </path>

    <property name="jar.name"
            value="${dist}/${ant.project.name}-${project.version}.jar" />

    <manifestclasspath property="jar.classpath" jarfile="${jar.name}">
        <classpath refid="classpath"/>
    </manifestclasspath>

    <!-- Pre-build Preparation -->
    <target name="prepare">
        <!-- Create the time stamp -->
        <tstamp />
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}" />
    </target>

    <!-- Compile Java source files -->
    <target name="compile" depends="prepare" description="Compile Java sources">
        <javac destdir="${build}" debug="on" fork="true"
               memoryMaximumSize="128m" includeantruntime="false">
            <src path="${src}" />
            <classpath refid="classpath" />
        </javac>
        <copy todir="classes">
            <fileset dir="${src}">
                <include name="**/*.class" />
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <!-- Create the ${dist}/lib directory -->
        <mkdir dir="${dist}" />
        <jar basedir="${build}"
                jarfile="${jar.name}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Specification-Title"
                           value="${ant.project.name}" />
                <attribute name="Specification-Version"
                           value="${project.version}" />
                <attribute name="Specification-URL" value="${project.url}" />
                <attribute name="Implementation-Version"
                           value="${project.version}-${build.date}" />
                <attribute name="Main-Class" value="jbsdiff.ui.CLI" />
                <attribute name="Class-Path" value="${jar.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="javadoc" description="Generates javadoc" depends="compile">
        <echo message="Generating javadoc for ${ant.project.name}..." />
        <mkdir dir="${docs}" />
        <javadoc sourcepath="${src}" destdir="${docs}" useexternalfile="yes"
                 doctitle="${doctitle}"
                 windowtitle="${windowtitle}" author="false"
                 classpathref="classpath"
                 stylesheetfile="docs/stylesheet.css">
            <fileset dir="${src}"/>
        </javadoc>
    </target>

    <target name="clean" depends="releaseclean">
        <delete dir="${docs}" />
    </target>

    <target name="releaseclean">
        <delete dir="${build}" />
        <delete dir="release" />
        <delete file="${jar.name}" />
    </target>

    <target name="release" depends="compile,jar,javadoc,releaseclean">
        <echo>Generating release ${project.version}</echo>
        <echo>Built by: ${user.name} on ${build.date}</echo>
        <echo>Operating System: ${os.name} ${os.version}</echo>

        <property name="reldir"
            value="release/${ant.project.name}-${project.version}" />
        <mkdir dir="${reldir}" />
        <copy todir="${reldir}">
            <fileset dir="." />
        </copy>
        <delete dir="${reldir}/${reldir}" />
        <delete includeemptydirs="true">
            <fileset dir="${reldir}"
                     includes="**/.git" defaultexcludes="false"/>
        </delete>
        <zip destfile="${ant.project.name}-${project.version}.zip"
             basedir="release" />
        <delete dir="release" />
    </target>
</project>
